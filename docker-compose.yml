version: '3'
networks:
  pulsar:
    driver: bridge

services:
  # Start zookeeper
  zookeeper:
    image: apachepulsar/pulsar:latest
    profiles: [ "pulsar" ]
    container_name: zookeeper
    restart: on-failure
    networks:
      - pulsar
    # volumes:
    #   - ./data/zookeeper:/pulsar/data/zookeeper
    environment:
      - metadataStoreUrl=zk:zookeeper:2181
    command: >
      bash -c "bin/apply-config-from-env.py conf/zookeeper.conf && \
             bin/generate-zookeeper-config.sh conf/zookeeper.conf && \
             exec bin/pulsar zookeeper"
    healthcheck:
      test: [ "CMD", "bin/pulsar-zookeeper-ruok.sh" ]
      interval: 10s
      timeout: 5s
      retries: 30

  # Init cluster metadata
  pulsar-init:
    container_name: pulsar-init
    hostname: pulsar-init
    image: apachepulsar/pulsar:latest
    profiles: [ "pulsar" ]
    networks:
      - pulsar
    command: >
      bin/pulsar initialize-cluster-metadata \
               --cluster cluster-a \
               --zookeeper zookeeper:2181 \
               --configuration-store zookeeper:2181 \
               --web-service-url http://broker:8080 \
               --broker-service-url pulsar://broker:6650
    depends_on:
      zookeeper:
        condition: service_healthy

  # Start bookie
  bookie:
    image: apachepulsar/pulsar:latest
    profiles: [ "pulsar" ]
    container_name: bookie
    restart: on-failure
    networks:
      - pulsar
    environment:
      - clusterName=cluster-a
      - zkServers=zookeeper:2181
      - metadataServiceUri=metadata-store:zk:zookeeper:2181
    depends_on:
      zookeeper:
        condition: service_healthy
      pulsar-init:
        condition: service_completed_successfully
    # Map the local directory to the container to avoid bookie startup failure due to insufficient container disks.
    # volumes:
    #   - ./data/bookkeeper:/pulsar/data/bookkeeper
    command: bash -c "bin/apply-config-from-env.py conf/bookkeeper.conf && exec bin/pulsar bookie"

  # Start broker
  broker:
    image: apachepulsar/pulsar:latest
    profiles: [ "pulsar" ]
    container_name: broker
    hostname: broker
    restart: on-failure
    networks:
      - pulsar
    environment:
      - metadataStoreUrl=zk:zookeeper:2181
      - zookeeperServers=zookeeper:2181
      - clusterName=cluster-a
      - managedLedgerDefaultEnsembleSize=1
      - managedLedgerDefaultWriteQuorum=1
      - managedLedgerDefaultAckQuorum=1
      - advertisedAddress=broker
      - advertisedListeners=external:pulsar://127.0.0.1:6650
    depends_on:
      zookeeper:
        condition: service_healthy
      bookie:
        condition: service_started
    ports:
      - "6650:6650"
      - "8080:8080"
    # volumes:
    #   - ./connectors/pulsar:/pulsar/connectors
    command: bash -c "bin/apply-config-from-env.py conf/broker.conf &&  exec bin/pulsar broker"

  # MySQL8
  db:
    image: mysql:8
    hostname: mysqldb
    container_name: mysqldb
    profiles: [ "eda", "db" ]
    cap_add:
      - SYS_NICE
    restart: always
    environment:
      - MYSQL_DATABASE=ordenes
      - MYSQL_ROOT_PASSWORD=adminadmin
    ports:
      - '3306:3306'
    # volumes:
    #   - ./data/mysql:/var/lib/mysql:rw
    #   - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    user: mysql

  # Orders service
  order:
    container_name: order
    hostname: order
    image: order/flask
    profiles: [ "eda", "order" ]
    depends_on:
      - db
    environment:
      - ORDERS_ADDRESS=orders
      - PULSAR_ADDRESS=broker
    ports:
      - "5000:5000"

  # PostgreSQL
  dbdelivery:
    container_name: db-delivery
    profiles: [ "deliverydb" ]
    image: postgres
    environment:
      POSTGRES_PASSWORD: 987654321
      POSTGRES_USER: delivery_user
      POSTGRES_DB: delivery_db
    ports:
      - 5432:5432

  # Delivery service
  delivery:
    container_name: delivery
    hostname: delivery
    build: ./src/delivery
    profiles: ["delivery"]
    depends_on:
      - dbdelivery
      - broker
      - zookeeper
      - bookie
      - pulsar-init
    environment:
      - DB_USER=delivery_user
      - DB_PASSWORD=987654321
      - DB_HOST=localhost
      - DB_PORT=5432
      - DB_NAME=delivery_db
      - PULSAR_HOST=pulsar://localhost:6650
      - PULSAR_SUBS_TOPIC=outbound-created
      - DB_PASSWORD=delivery-sub
      - PULSAR_SUBS_TOPIC=roadmap-created
      
  # Warehouse service
  warehouse:
    container_name: warehouse
    hostname: warehouse
    image: warehouse/flask 
    profiles: ["eda", "order"]
    depends_on:
      - db
    environment:
      - WAREHOUSE_ADDRESS=warehouse
      - PULSAR_ADDRESS=broker
    ports:
      - "5001:5001"
